import base64
from io import BytesIO

import matplotlib.pyplot as plt
import numpy as np
from reportlab.lib.utils import ImageReader


def get_graph():
    buffer = BytesIO()
    plt.savefig(buffer, format='png')
    buffer.seek(0)
    image_png = buffer.getvalue()
    graph = base64.b64encode(image_png)
    graph = graph.decode('utf-8')
    buffer.close()
    return graph


def get_graphe():
    buffer = BytesIO()
    plt.savefig(buffer, format='png')
    buffer.seek(0)
    imgdata = ImageReader(buffer)
    return imgdata


def temperament_circle(mark1, mark2):
    # set axis limits of plot (x=0 to 20, y=0 to 20)
    plt.clf()
    plt.axis([0, 24, 0, 24])
    plt.xticks(np.arange(0, 24, step=2))
    plt.yticks(np.arange(0, 24, step=2))
    plt.ylim(ymin=0)
    # create circle with (x, y) coordinates at (10, 10)
    c = plt.Circle((12, 12), 12, fill=False)
    d = plt.Circle((12, 12), 4, fill=False)

    # add circle to plot (gca means "get current axis")
    plt.gca().add_artist(c)
    plt.gca().add_artist(d)

    x1, y1 = [12, 12], [0, 24]
    x2, y2 = [0, 24], [12, 12]
    plt.plot(x1, y1, x2, y2, marker='o', color='black')
    plt.plot(mark2, mark1, marker='o', markersize=15, color='lightgreen')
    # plt.text(5, 13, 'Меланхолик', fontsize=10)
    # plt.text(5, 11, 'Флегматик', fontsize=10)
    # plt.text(13, 13, 'Холерик', fontsize=10)
    # plt.text(13, 11, 'Сангвиник', fontsize=10)
    # plt.text(8, 22, 'Нестабильность', fontsize=10)
    # plt.text(9, 2, 'Стабильность', fontsize=10)
    # plt.text(-4, 12.5, 'Интровертность', fontsize=10)
    # plt.text(20, 12.5, 'Экстравертность', fontsize=10)

    graph = get_graph()
    return graph


def temperament_circle1(mark1, mark2):
    # set axis limits of plot (x=0 to 20, y=0 to 20)
    plt.clf()
    plt.axis([0, 24, 0, 24])
    plt.xticks(np.arange(0, 24, step=2))
    plt.yticks(np.arange(0, 24, step=2))
    plt.ylim(ymin=0)
    # create circle with (x, y) coordinates at (10, 10)
    c = plt.Circle((12, 12), 12, fill=False)
    d = plt.Circle((12, 12), 4, fill=False)

    # add circle to plot (gca means "get current axis")
    plt.gca().add_artist(c)
    plt.gca().add_artist(d)

    x1, y1 = [12, 12], [0, 24]
    x2, y2 = [0, 24], [12, 12]
    plt.plot(x1, y1, x2, y2, marker='o', color='black')
    plt.plot(mark2, mark1, marker='o', markersize=15, color='lightgreen')
    plt.text(5, 13, 'Меланхолик', fontsize=10)
    plt.text(5, 11, 'Флегматик', fontsize=10)
    plt.text(13, 13, 'Холерик', fontsize=10)
    plt.text(13, 11, 'Сангвиник', fontsize=10)
    plt.text(8, 22, 'Нестабильность', fontsize=10)
    plt.text(9, 2, 'Стабильность', fontsize=10)
    plt.text(-4, 12.5, 'Интровертность', fontsize=10)
    plt.text(20, 12.5, 'Экстравертность', fontsize=10)

    graph = get_graphe()
    return graph


def bar(mark1, mark2, mark3):
    x = ['', '', '']
    y = [mark1, mark2, mark3]
    t = ['Направленность на задачу', 'Направленность на взаимодействие', 'Направленность на себя']
    fig, ax = plt.subplots()
    width = 0.75  # the width of the bars
    ind = np.arange(len(y))  # the x locations for the groups
    ax.barh(ind, y, width, color="lightgreen")
    ax.set_yticks(ind + width / 2)
    ax.set_yticklabels(x, minor=False)
    ax.set_xlim([0, 67])
    plt.title('Результаты теста на направленность личности человека')
    plt.xlabel('')
    plt.ylabel('')
    for i, v in enumerate(y):
        ax.text(v + 3, i + .25, t[i], color='black', fontweight='bold')

    graph = get_graph()
    return graph

def bar2(mark1, mark2, mark3):
    x = ['', '', '']
    y = [mark1, mark2, mark3]
    t = ['Направленность на задачу', 'Направленность на взаимодействие', 'Направленность на себя']
    fig, ax = plt.subplots()
    width = 0.75  # the width of the bars
    ind = np.arange(len(y))  # the x locations for the groups
    ax.barh(ind, y, width, color="lightgreen")
    ax.set_yticks(ind + width / 2)
    ax.set_yticklabels(x, minor=False)
    ax.set_xlim([0, 67])
    plt.title('Результаты теста на направленность личности человека')
    plt.xlabel('')
    plt.ylabel('')
    for i, v in enumerate(y):
        ax.text(v + 3, i + .25, t[i], color='black', fontweight='bold')

    graph = get_graphe()
    return graph


def make_radar_chart(stats):
    labels = ['Когнитивно-эмоциональный', 'Личностно-креативный', 'Мотивационно-ценностный',
              'Деятельностно-процессуальный', 'Рефлексивный']
    attribute_labels = labels
    markers = [0, 1, 2, 3, 4, 5]

    labels = np.array(attribute_labels)

    angles = np.linspace(0, 2 * np.pi, len(labels), endpoint=False)
    stats = np.concatenate((stats, [stats[0]]))
    angless = np.concatenate((angles, [angles[0]]))

    fig = plt.figure()
    ax = fig.add_subplot(111, polar=True)
    ax.plot(angless, stats, 'o-', linewidth=2, color='green')
    ax.fill(angless, stats, alpha=0.25, color='green')
    ax.set_thetagrids(angles * 180 / np.pi, labels)
    plt.yticks(markers)
    ax.set_title("Показатели развития творческих способностей")
    ax.grid(True)

    # fig.savefig("static/images/%s.png" % name)

    graph = get_graph()
    return graph


def make_radar_chart1(stats):
    labels = ['Когнитивно-эмоциональный', 'Личностно-креативный',
              'Мотивационно-ценностный', 'Деятельностно-процессуальный', 'Рефлексивный']
    attribute_labels = labels
    markers = [0, 1, 2, 3, 4, 5]

    labels = np.array(attribute_labels)

    angles = np.linspace(0, 2 * np.pi, len(labels), endpoint=False)
    stats = np.concatenate((stats, [stats[0]]))
    angless = np.concatenate((angles, [angles[0]]))

    fig = plt.figure()
    ax = fig.add_subplot(111, polar=True)
    ax.plot(angless, stats, 'o-', linewidth=2, color='green')
    ax.fill(angless, stats, alpha=0.25, color='green')
    ax.set_thetagrids(angles * 180 / np.pi, labels)
    plt.yticks(markers)
    ax.set_title("Показатели развития творческих способностей")
    ax.grid(True)

    # fig.savefig("static/images/%s.png" % name)

    graph = get_graphe()
    return graph


def pdf_report(list):
    print(list)
    test1_1 = list[0]
    test1_2 = list[1]
    test1_3 = list[2]
    text1_1 = ""

    test2 = list[3]
    test4 = list[7]
    test5_1 = list[8]
    test5_2 = list[9]
    test5_3 = list[10]

    text1 = ""
    text2 = ""
    text3 = ""
    text4 = ""
    text5 = ""
    a = ""

    if 0 <= int(test1_1) <= 12 and 0 <= int(test1_2) <= 12:
        text1_1 = "Флегматик характеризуется сравнительно низким уровнем активности поведения, новые формы которого" \
                  " вырабатываются медленно, но являются стойкими. Обладает медлительностью и спокойствием в действиях," \
                  " мимике и речи, ровностью, постоянством, глубиной чувств и настроений. Настойчивый и упорный" \
                  " «труженик жизни», он редко выходит из себя, не склонен к аффектам, рассчитав свои силы, доводит" \
                  " дело до конца, ровен в отношениях, в меру общителен, не любит попусту болтать. Экономит силы," \
                  " попусту их не тратит. В зависимости от условий в одних случаях флегматик может характеризоваться" \
                  " «положительными» чертами – выдержкой, глубиной мыслей, постоянством, основательностью и т. д.," \
                  " в других – вялостью, безучастностью к окружающему, ленью и безволием, бедностью и слабостью эмоций," \
                  " склонностью к выполнению одних лишь привычных действий."
    elif 0 <= int(test1_1) <= 12 and 12 <= int(test1_2) <= 24:
        text1_1 = "Меланхолик. У него реакция часто не соответствует силе раздражителя, присутствует глубина и" \
                  " устойчивость чувств при слабом их выражении. Ему трудно долго на чем-то сосредоточиться." \
                  " Сильные воздействия часто вызывают у меланхолика продолжительную тормозную реакцию" \
                  " (опускаются руки). Ему свойственны сдержанность и приглушенность моторики и речи, застенчивость," \
                  " робость, нерешительность. В нормальных условиях меланхолик – человек глубокий, содержательный," \
                  " может быть хорошим тружеником, успешно справляться с жизненными задачами. При неблагоприятных" \
                  " условиях может превратиться в замкнутого, боязливого, тревожного, ранимого человека, склонного к" \
                  " тяжелым внутренним переживаниям таких жизненных обстоятельств, которые вовсе этого не заслуживают."
    elif 12 <= int(test1_1) <= 24 and 0 <= int(test1_2) <= 12:
        text1_1 = "«Чистый» сангвиник быстро приспосабливается к новым условиям, быстро сходится с людьми, общителен." \
                  " Чувства легко возникают и сменяются, эмоциональные переживания, как правило, неглубоки. " \
                  "Мимика богатая, подвижная, выразительная. Несколько непоседлив, нуждается в новых впечатлениях," \
                  " недостаточно регулирует свои импульсы, не умеет строго придерживаться выработанного распорядка," \
                  " жизни, системы в работе. В связи с этим не может успешно выполнять дело, требующее равной затраты" \
                  " сил, длительного и методичного напряжения, усидчивости, устойчивости внимания, терпения. " \
                  "При отсутствии серьезных целей, глубоких мыслей, творческой деятельности вырабатываются" \
                  " поверхностность и непостоянство."
    elif 12 <= int(test1_1) <= 24 and 12 <= int(test1_2) <= 24:
        text1_1 = "Холерик отличается повышенной возбудимостью, действия прерывисты. Ему свойственны резкость и" \
                  " стремительность движений, сила, импульсивность, яркая выраженность эмоциональных переживаний." \
                  " Вследствие неуравновешенности, увлекшись делом, склонен действовать изо всех сил, истощаться больше," \
                  " чем следует. Имея общественные интересы, темперамент проявляет в инициативности, энергичности," \
                  " принципиальности. При отсутствии духовной жизни холерический темперамент часто проявляется в" \
                  " раздражительности, эффективности, несдержанности, вспыльчивости, неспособности к самоконтролю при" \
                  " эмоциональных обстоятельствах."

    text1_2 = "Характеризует эмоциональную устойчивость или неустойчивость" \
              " (эмоциональная стабильность или нестабильность). Эмоциональная устойчивость – черта," \
              " выражающая сохранение организованного поведения, ситуативной целенаправленности в обычных и стрессовых" \
              " ситуациях. Характеризуется зрелостью, отличной адаптацией, отсутствием большой напряженности, " \
              "беспокойства, а также склонностью к лидерству, общительности.Нейротизм выражается в чрезвычайной" \
              " нервности, неустойчивости, плохой адаптации, склонности к быстрой смене настроений (лабильности)," \
              " чувстве виновности и беспокойства, озабоченности, депрессивных реакциях, рассеянности внимания," \
              " неустойчивости в стрессовых ситуациях. Нейротизму соответствует эмоциональность, импульсивность;" \
              " неровность в контактах с людьми, изменчивость интересов, неуверенность в себе, выраженная" \
              " чувствительность, впечатлительность, склонность к раздражительности. Нейротическая личность" \
              " характеризуется неадекватно сильными реакциями по отношению к вызывающим их стимулам." \
              " У лиц с высокими показателями по шкале нейротизма в неблагоприятных стрессовых" \
              " ситуациях может развиться невроз."

    text1_3 = "Высокие значения по этой шкале говорят о неискренности в ответах. " \
              "Также это может свидетельствовать о некоторой демонстративности поведения," \
              " стремлении казаться лучше в глазах окружающих людей, высказывать только социально" \
              " одобряемое мнение. Если ваш результат признан сомнительным или недостоверным," \
              " попробуйте пройти тест еще раз, отвечая более откровенно, не задумываясь о " \
              "возможном впечатлении, которое могли бы произвести ваши ответы."



    if 45 <= int(test5_1) <= 74:
        text1 = "Количество баллов от 45 до 74 – «средняя» и «высокая» самооценка – свидетельствует о реалистичной" \
                " (адекватной) самооценке. При этом так же, как и при оценке уровня притязаний, оптимальным для" \
                " личностного развития следует признать результат, находящийся в верхней части этого интервала" \
                " – от 60 до 74 баллов («высокая» самооценка)."
    elif 75 <= int(test5_1) <= 100:
        text1 = "Количество баллов от 75 до 100 (и выше предлагаемого максимума) свидетельствует о завышенной" \
                " самооценке (переоценке себя) и указывает на определенные отклонения в формировании личности. " \
                "Такая завышенная самооценка может свидетельствовать о личностной незрелости, неумении правильно" \
                " оценить результаты своей деятельности, сравнивать себя с другими. Кроме того, завышенная самооценка" \
                " может указывать на существенные искажения в формировании личности – «закрытость» для опыта," \
                " нечувствительность к своим ошибкам, неуспехам, замечаниям и оценкам окружающих."
    elif 45 >= int(test5_1):
        text1 = "Количество баллов ниже 45 указывает на заниженную самооценку (недооценку себя) и свидетельствует" \
                " о крайнем неблагополучии в развитии личности. Школьников с такой самооценкой очень мало, и все они " \
                "составляют с точки зрения личностного развития «группу риска», заслуживают пристального внимания со" \
                " стороны школьного психолога. Как показывают исследования, за низкой самооценкой могут скрываться два" \
                " совершенно разных психологических явления: подлинная неуверенность в себе, то есть отношение к себе" \
                " как ни к чему не способному, неумелому, никому не нужному, и «защитная», когда декларирование" \
                " (в том числе и самому себе) собственного неумения, отсутствия способностей, того," \
                " что «все равно ничего не выйдет», позволяет не прилагать никаких усилий" \
                " или подменить деятельность отношением к ней."

    if 60 <= int(test5_2) <= 90:
        text2 = "Норму, реалистический уровень притязаний характеризует результат от 60 до 89 баллов " \
                "(«средние» и «высокие» притязания). При этом оптимальным является сравнительно высокий уровень" \
                "– от 75 до 89 баллов, свидетельствующий об оптимистическом представлении о своих возможностях, " \
                "что является важным фактором личностного развития."
    elif 90 <= int(test5_2) <= 100:
        text2 =  "Очень высокий уровень притязаний – от 90 до 100 баллов – свидетельствует о нереалистическом, " \
                "некритичном отношении школьника к собственным возможностям. Особого внимания в этом плане заслуживают " \
                "такие случаи, когда уровень притязаний отмечается выше максимально возможного значения, крайней верхней " \
                "точки шкалы (100 бал.) Нереалистический уровень притязаний часто свидетельствует о том, что школьник не " \
                "умеет правильно ставить перед собой цели. Для старшего школьного возраста – это неблагоприятный показатель, " \
                "поскольку, как известно, основное психологическое содержание данного периода составляет самоопределение, " \
                "предъявляющее к такому умению достаточно высокие требования. Наличие нереалистического уровня притязаний " \
                "может, таким образом, свидетельствовать о личностной незрелости."
    elif 60 >= int(test5_2):
        text2 = "Результат менее 60 баллов – низкие «притязания» – свидетельствует о заниженном уровне притязаний." \
                " Если такой результат характеризует средний показатель уровня притязаний испытуемого, то он является" \
                " индикатором неблагоприятного развития личности. Естественно, что чем ниже уровень притязаний, " \
                "тем более данный показатель свидетельствует о неблагополучии."

    if 8 <= int(test5_3) <= 22:
        text3 = "За норму здесь принимается расхождение от 8 до 22 баллов, свидетельствующее, " \
                "что школьник ставит перед собой такие цели, которых он действительно стремится достичь. " \
                "Притязания в значительной части случаев основываются на оценке им своих возможностей " \
                "и служат стимулом личностного развития."
    elif 0 <= int(test5_3) <= 7:
        text3 = "Расхождения от 1 до 7 баллов и особенно случаи полного совпадения уровня притязаний и уровня" \
                " самооценки указывают на то, что притязания не служат стимулом личностного развития, становления " \
                "той или иной стороны личности. Конкретная оценка этого расхождения различна в зависимости от того," \
                " в какой части шкалы находятся эти показатели. Так, в верхней части шкалы (76-100 б.)" \
                " они свидетельствуют о завышенной самооценке; в средней части (46-75 б.) – отношение школьника" \
                " к себе не носит конструктивного характера; в нижней части (0-45 б.) – они могут являться показателем" \
                " предельно заниженного представления о себе (в том случае если школьник заполняет таким образом все" \
                " или большинство шкал методики), свидетельствовать о том, что он как бы «смирился» со своей" \
                " «никчемностью», даже не надеется исправить положение. Если таким образом заполняются 1 или 2 шкалы," \
                " это указывает на незначимость для учащегося той или иной стороны личности."
    elif int(test5_3) >= 23:
        text3 = "Расхождение в 23 балла и более характеризует резкий разрыв между самооценкой и притязаниями. " \
                "Такое соотношение указывает на конфликт между тем, к чему школьник стремится, и тем," \
                " что он считает для себя возможным. Особенно неблагоприятны случаи, когда самооценка находится" \
                " в нижней части шкалы, а притязания – в средней или высокой. При таком сильном расхождении уровень" \
                " притязаний не только не стимулирует, но, напротив, тормозит личностное развитие."



    if 19 <= int(test4) <= 23:
        text4 = "19 - 23 баллов - высокая потребность в достижениях (" + str(test4) + ")"
    elif 16 <= int(test4) <= 18:
        text4 = "16 - 18 баллов - повышенная потребность в достижениях (" + str(test4) + ")"
    elif 10 <= int(test4) <= 15:
        text4 = "10 - 15 баллов - средняя потребность в достижениях (" + str(test4) + ")"
    elif 7 <= int(test4) <= 9:
        text4 = "7 - 9 баллов - пониженная потребность в достижениях (" + str(test4) + ")"
    elif 0 <= int(test4) <= 6:
        text4 = "0 - 6 баллов - низкая потребность в достижениях (" + str(test4) + ")"

    text44 = "Чем больше баллов в сумме набирает ученик, тем в большей степени у него выражена потребность в достижениях." \
             "Лица с высоким уровнем потребности в достижениях отличаются следующими чертами: " \
             "- настойчивостью в достижении своих целей " \
             "- неудовлетворенностью достигнутым " \
             "- постоянным стремлением сделать дело лучше, чем раньше " \
             "- склонностью сильно увлекаться работой - стремлением в любом случае пережить удовольствие успеха " \
             "- неспособностью плохо работать - потребностью изобретать новые приемы работы в исполнении самых обычных дел " \
             "- отсутствием духа соперничества, желанием, чтобы и другие вместе с ними пережили успех и достижение результата " \
             "- неудовлетворенностью легким успехом и неожиданной легкостью задачи " \
             "- готовностью принять помощь и помогать другим при решении трудных задач, чтобы совместно испытать радость успеха."

    text4 = text4 + text44
    if 34 <= int(test2) <= 40:
        text5 = "34 - 40 баллов - очень высокий уровень (" + str(test2) + ")"
    elif 27 <= int(test2) <= 33:
        text5 = "27 - 33 баллов - высокий уровень (" + str(test2) + ")"
    elif 21 <= int(test2) <= 26:
        text5 = "21 - 26 баллов - нормальный, средний уровень (" + str(test2) + ")"
    elif 16 <= int(test2) <= 20:
        text5 = "16 - 20 баллов - низкий уровень (" + str(test2) + ")"
    elif 10 <= int(test2) <= 15:
        text5 = "10 - 15 баллов - очень низкий уровень (" + str(test2) + ")"

    text55 = " Креативность часто рассматривается как нечто противоположное конформности, обыденности, предполагающее нестандартные подходы, отличающиеся  от общепринятых. Спирмен называл креативность силой человеческого ума,  создающей новое содержание путем изменения и создания новых связей.  Симпсон определял креативность как способность к разрушению общепринятого,  обычного порядка следования идей в процессе мышления."
    text5 = text5 + text55

    a = [text1, text2, text3, text1_1, text1_2, text1_3, text4, text5]
    return a


def bar1(mark1, mark2, mark3):
    x = ['', '', '']
    y = [mark1, mark2, mark3]
    t = ['Контрольная шкала', 'Нейротизм', 'Экстраверсия/Интроверсия']
    fig, ax = plt.subplots()
    width = 0.75  # the width of the bars
    ind = np.arange(len(y))  # the x locations for the groups
    ax.barh(ind, y, width, color="lightgreen")
    ax.set_yticks(ind + width / 2)
    ax.set_yticklabels(x, minor=False)
    ax.set_xlim([0, 24])
    plt.title('Результаты теста')
    plt.xlabel('')
    plt.ylabel('')
    for i, v in enumerate(y):
        ax.text(v + 3, i + .25, str(v), color='black', fontweight='bold')
        ax.text(v + 5, i + .25, t[i], color='black')

    graph = get_graphe()
    return graph
